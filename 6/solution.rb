input = <<~INPUT
  2,5,3,4,4,5,3,2,3,3,2,2,4,2,5,4,1,1,4,4,5,1,2,1,5,2,1,5,1,1,1,2,4,3,3,1,4,2,3,4,5,1,2,5,1,2,2,5,2,4,4,1,4,5,4,2,1,5,5,3,2,1,3,2,1,4,2,5,5,5,2,3,3,5,1,1,5,3,4,2,1,4,4,5,4,5,3,1,4,5,1,5,3,5,4,4,4,1,4,2,2,2,5,4,3,1,4,4,3,4,2,1,1,5,3,3,2,5,3,1,2,2,4,1,4,1,5,1,1,2,5,2,2,5,2,4,4,3,4,1,3,3,5,4,5,4,5,5,5,5,5,4,4,5,3,4,3,3,1,1,5,2,4,5,5,1,5,2,4,5,4,2,4,4,4,2,2,2,2,2,3,5,3,1,1,2,1,1,5,1,4,3,4,2,5,3,4,4,3,5,5,5,4,1,3,4,4,2,2,1,4,1,2,1,2,1,5,5,3,4,1,3,2,1,4,5,1,5,5,1,2,3,4,2,1,4,1,4,2,3,3,2,4,1,4,1,4,4,1,5,3,1,5,2,1,1,2,3,3,2,4,1,2,1,5,1,1,2,1,2,1,2,4,5,3,5,5,1,3,4,1,1,3,3,2,2,4,3,1,1,2,4,1,1,1,5,4,2,4,3
INPUT

# Part 1

fishes = input.split(",").map { Integer(_1) }
80.times do |n|
  fishes = fishes.flat_map { (_1 - 1) >= 0 ? [_1 - 1] : [6, 8] }
end
puts "Count after 80 iterations: #{fishes.count}"

# Part 2

fishes = input.split(",").map { Integer(_1) }.tally
256.times do |n|
  fishes = fishes.each_with_object(Hash.new { |h, k| h[k] = 0 }) do |(n, c), new_fishes|
    if (n - 1) >= 0
      new_fishes[(n - 1)] += c
    else
      new_fishes[6] += c
      new_fishes[8] += c
    end
  end
end
puts "Count after 256 iterations: #{fishes.values.sum}"
